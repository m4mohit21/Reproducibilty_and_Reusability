# -*- coding: utf-8 -*-
"""Assignment4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Z_aazk78Z5fzM75_MYL5vy5FnCBd_t6W
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

"""## Step 1: Load the dataset

"""

# Load the dataset
url = "https://raw.githubusercontent.com/selva86/datasets/master/BostonHousing.csv"
df = pd.read_csv(url)

# Display first 5 rows
print(df.head())

"""## Step 2: Exploratory Data Analysis (EDA)"""

# Print summary statistics
print(df.describe())

# Check for missing values
print(df.isnull().sum())

"""## Step 3: Data Visualization"""

# Correlation heatmap
plt.figure(figsize=(10, 8))
sns.heatmap(df.corr(), annot=True, cmap='coolwarm')
plt.title('Correlation Matrix')
plt.savefig('correlation_heatmap.png')  # Save heatmap as an image
plt.show()

# Scatter plot between 'rm' (average number of rooms) and 'medv' (median value of homes)
plt.figure(figsize=(8, 6))
sns.scatterplot(x='rm', y='medv', data=df)
plt.title('RM vs MEDV')
plt.xlabel('Average Number of Rooms (RM)')
plt.ylabel('Median Value of Homes (MEDV)')
plt.savefig('rm_vs_medv.png')  # Save scatter plot as an image
plt.show()

"""## Step 4: Prepare Data for Linear Regression"""

# Split dataset into training and testing sets
X = df[['rm']]  # Feature
y = df['medv']  # Target

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

"""## Step 5: Train Linear Regression Model"""

# Train the Linear Regression model
model = LinearRegression()
model.fit(X_train, y_train)

"""## Step 6: Make Predictions on the Test Set"""

# Make predictions
y_pred = model.predict(X_test)

"""## Evaluate the Model"""

# Evaluate the model performance
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f"Mean Squared Error: {mse}")
print(f"R^2 Score: {r2}")

"""## Visualize the Linear Regression Results"""

# Plot Actual vs Predicted values
plt.figure(figsize=(8, 6))
plt.scatter(X_test, y_test, color='blue', label='Actual Prices')
plt.plot(X_test, y_pred, color='red', label='Predicted Prices')
plt.title('Actual vs Predicted House Prices')
plt.xlabel('Average Number of Rooms (RM)')
plt.ylabel('House Price')
plt.legend()
plt.savefig('actual_vs_predicted_prices.png')  # Save the result image
plt.show()